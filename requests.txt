надо:
TS_1
TS_2
DLSR_1
DLSR_2

точнее:
rtcp.timestamp.ntp.msw
rtcp.timestamp.ntp.lsw
rtcp.ssrc.dlsr

это из ртсп, чтобы было ртсп нужны из сипа:
порты ртп/ртсп -> из сдп
идентификатор сессии -> из сдп
кодеки (потом)

+ ещё
1 анализ ртп -> ртп таймштамп в других единицах измерения??????????
2 кодеки
3 джитер для ртсп
4 джитер для ртп

алгоритм:
1. получить сип инвайт  -> ртп ртсп порты колл айди
2. получить сип 200 ок  -> ртп ртсп порты колл айди = колл айди
3. получить ртсп1       -> тс1
4. получить ртсп2       -> длср1
5. получить ртсп2       -> тс2 длср2
6. вычисления
7. повторить с 3. пока не
   получен сип бай (и 200 ок?)


идея:
создавать эксемплляры сессии при получении сип инвайта и 200 ок,
сортировать пакеты по сессиям в стопки -> каждый тред будет сосать из стопки пакеты и считать коэффы

баги:
1. колл айди может содержать разделители ~ . - @
2. может прийти 200 OK вместо 200 Ok
3. если звонить с тилибона то ртп и ртсп сидят на 7078
4. в тсп хедер иногда приходят 'a' и 'b'

общий алгоритм:
0. получить название интерфейса, режим работы (анализ по ртп или ртсп)

...таск 1...
1. прочесть заголовки пакета
2. если сип инвайт и 200 ок создать эксемпляр сессии, добавить его в список сессий
3. добавить ртп/ртсп пакет в стек экземпляра соответствующей сессии
4. если сип бай освободить память (удалить сесиию)

...таск 2...
1. взять очередной пакет из стека
2. обработать пакет
3. удалить пакет из стека

вопросы:
получится ли в одном таске обрабатывать три потока пакетов ртсп?
1 - для подсчёта d
2 - для подсчёта J одного потока
3 - для подсчёта J другого потока

возможно.

нужно ли создавать таски для каждой сессии?
хз. наверное да
